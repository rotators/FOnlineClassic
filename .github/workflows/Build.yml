name: Build

on: push

jobs:

 build:
  runs-on: ${{ matrix.os }}
  strategy:
   fail-fast: false
   matrix:
    os:       [ubuntu-latest]
    platform: [x32]

  steps:
  - name:  Install additional software
    run:   |
           :
           if [ "$MATRIX_OS" == "Linux" ]; then
              if   [ "$MATRIX_PLATFORM" == "x32" ]; then
                   arch=i386
                   sudo apt install -y gcc-multilib g++-multilib
              elif [ "$MATRIX_PLATFORM" == "x64" ]; then
                   arch=amd64
              else
                   echo "Unknown platform: $MATRIX_PLATFORM"
                   exit 1
              fi
              apt install -y libx11-dev:${arch} libxft-dev:${arch} libxi-dev:${arch} libxinerama-dev:${arch} libllvm6.0:${arch} libgl1-mesa-dri:${arch} libgl1-mesa-glx:${arch} libgl1-mesa-dev:${arch} libglu1-mesa:${arch} libglu1-mesa-dev:${arch} freeglut3:${arch} freeglut3-dev:${arch} libfreetype6-dev:${arch} libfontconfig-dev:${arch} libpng-dev:${arch}
              hash -r
           fi
    shell: bash
    env:
     MATRIX_OS:       ${{ matrix.os }}
     MATRIX_PLATFORM: ${{ matrix.platform }}

  - name: Clone repository
    uses: actions/checkout@master
    with:
     fetch-depth: 1
     submodules:  recursive

  - name: Build
    run:  cmake -P Build.cmake
    env:
     CI:              true
     MATRIX_OS:       ${{ matrix.os }}
     MATRIX_PLATFORM: ${{ matrix.platform }}
