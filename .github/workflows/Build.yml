name: Build

on: [push, pull_request]

jobs:

 build:

  runs-on: ${{ matrix.cfg.os }}
  name:    ${{ matrix.cfg.name }}
  strategy:
   fail-fast: false
   matrix:
    cfg:
    - { os: ubuntu-latest, name: Linux,   platform: x32 }
    - { os: windows-2016,  name: Windows, platform: x32 }

  steps:

  - name: Clone repository
    uses: actions/checkout@master
    with:
     fetch-depth: 1
     submodules:  recursive

  - name:  Install additional software
    run:   |
           :
           if   [ "$RUNNER_OS" == "Linux" ]; then
                if   [ "$MATRIX_PLATFORM" == "x32" ]; then
                     arch=i386

                     echo ::group::Prepare apt repository
                     sudo dpkg --add-architecture i386
                     sudo apt update
                     echo ::endgroup::

                     echo ::group::Install gcc/g++ multilib
                     sudo apt install -y gcc-multilib g++-multilib
                     echo ::endgroup::

                elif [ "$MATRIX_PLATFORM" == "x64" ]; then
                     arch=amd64
                else
                     echo "Unknown platform: $MATRIX_PLATFORM"
                     exit 1
                fi

                echo ::group::Install external libraries
                sudo apt install -y libx11-dev:${arch} libxft-dev:${arch} libxi-dev:${arch} libxinerama-dev:${arch} libllvm6.0:${arch} libgl1-mesa-dri:${arch} libgl1-mesa-glx:${arch} libgl1-mesa-dev:${arch} libglu1-mesa:${arch} libglu1-mesa-dev:${arch} freeglut3:${arch} freeglut3-dev:${arch} libfreetype6-dev:${arch} libfontconfig-dev:${arch} libpng-dev:${arch}
                echo ::endgroup::

           elif [ "$RUNNER_OS" == "Windows" ]; then

                echo ::group::Install VS2010
                choco install vcexpress2010
                echo ::endgroup::

           fi

           echo ::group::Check installed CMake version
           echo ::add-path::$CACHE_DIR/cmake/bin
           cmake -DO=Build.cmake -DOWNLOAD_DIR=$CACHE_DIR -P CMake/SelfUpdate/SelfUpdate.cmake
           echo ::endgroup::

           if [ "$RUNNER_OS" == "Linux" ]; then
              hash -r
           fi
    shell: bash
    env:
     CI:              true
     MATRIX_PLATFORM: ${{ matrix.cfg.platform }}
     CACHE_DIR:       SDK.Cache

  - name: Build
    run:  cmake -P Build.cmake
    env:
     CI:              true
     MATRIX_OS:       ${{ matrix.cfg.os }}
     MATRIX_PLATFORM: ${{ matrix.cfg.platform }}
